# name: release
# on:
#   push:
#     tags:
#     - 'v*.*.*'
# env:
#   TERM: xterm-color
#   RELEASE_ARCHIVE: target/toolbox.zip
# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#       with:
#         fetch-depth: 1
#     - name: Set environment variable
#       if: startsWith(github.ref, 'refs/tags/')
#       run: echo "PUBLISH_RELEASE=true" >> $GITHUB_ENV
#     - name: Create release
#       uses: release-drafter/release-drafter@v5
#       with:
#         publish: ${{ env.PUBLISH_RELEASE }}
#         config-name: release-config.yaml
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   package:
#     name: Upload release archive
#     runs-on: ubuntu-latest
#     needs: release
#     if: startsWith(github.ref, 'refs/tags/')
#     steps:
#     - name: Clone repository
#       uses: actions/checkout@v2
#       with:
#         fetch-depth: 1        
#     - name: Log into registry
#       run: docker login -u seek --password-stdin <<< "${{ secrets.DOCKER_PASSWORD }}"
#     - name: Publish Docker image
#       run: make build push push-latest RELEASE_VERSION=$(echo $GITHUB_REF | cut -d / -f 3)
#     - name: Package files
#       run: make package RELEASE_VERSION=$(echo $GITHUB_REF | cut -d / -f 3)
#     - name: Upload files
#       uses: alexellis/upload-assets@0.2.2
#       with:
#         asset_paths: '["${{ env.RELEASE_ARCHIVE }}"]'
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
